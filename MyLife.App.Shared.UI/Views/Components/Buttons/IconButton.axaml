<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             
			 xmlns:md-icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
			 
			 xmlns:c="clr-namespace:MyLife.App.Shared.UI.Views.Components.Buttons"
			 xmlns:vm="clr-namespace:MyLife.App.Shared.UI.ViewModels.Components.Buttons"
			 
			 xmlns:m-buttons="clr-namespace:MyLife.App.Shared.UI.Models.Components.Buttons"
			 xmlns:conv="clr-namespace:MyLife.App.Shared.UI.Utilities.Converters"
			 
			 mc:Ignorable="d"
			 d:DesignWidth="100" d:DesignHeight="100"
			 
			 Height="70" Width="70"
             
			 x:Class="MyLife.App.Shared.UI.Views.Components.Buttons.IconButton">

	<Design.DataContext>
		<vm:IconButtonViewModel
			IconId="FormatListChecks"
			Id="todo"
			Style="OUTLINED"
		/>
	</Design.DataContext>

	<UserControl.Resources>
		<conv:MathSubtractValueConverter x:Key="mathSubtractConverter" />
		<conv:MathAddValueConverter x:Key="mathAddConverter" />
	</UserControl.Resources>

	<ContentControl Padding="7" Content="{Binding Style, DataType={x:Type vm:IconButtonViewModel}}">
		<ContentControl.DataTemplates>
			<vm:IconButtonStyleSelector
				DataType="{x:Type m-buttons:IconButtonStyle}" 
				Value="{x:Static m-buttons:IconButtonStyle.OUTLINED}"
			>
				<vm:IconButtonStyleSelector.Content>
					<Border
						Height="{Binding $self.Height, Converter={StaticResource mathSubtractConverter}, ConverterParameter=10}"
						Width="{Binding $self.Width, Converter={StaticResource mathSubtractConverter}, ConverterParameter=10}"
						BoxShadow="0 0 10 3 LightGray"
						CornerRadius="30 30"
					>
						<Button
							IsEnabled="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).IsEnabled}"
							HorizontalContentAlignment="Center"
							CornerRadius="30 30"
							Command="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).Execute}"
						>
							<md-icons:MaterialIcon
								Kind="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).IconId}"
								Width="25"
								Height="25"
							/>
						</Button>
					</Border>
				</vm:IconButtonStyleSelector.Content>
			</vm:IconButtonStyleSelector>
			<vm:IconButtonStyleSelector 
				DataType="{x:Type m-buttons:IconButtonStyle}" 
				Value="{x:Static m-buttons:IconButtonStyle.ICON}"
			>
				<vm:IconButtonStyleSelector.Content>
					<Button
						IsEnabled="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).IsEnabled}"
						HorizontalContentAlignment="Center"
						CornerRadius="40 40"
						Height="{Binding $parent[c:IconButton].Height}"
						Width="{Binding $parent[c:IconButton].Width}"
						BorderBrush="Transparent"
						Background="Transparent"
						Command="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).Execute}"
					>
						<Button.Styles>
							<Style Selector="Button:pointerover">
								<Setter Property="BorderThickness" Value="0" />
							</Style>
						</Button.Styles>

						<md-icons:MaterialIcon
							Kind="{ReflectionBinding $parent[c:IconButton]((vm:IconButtonViewModel)DataContext).IconId}"
							Width="{Binding $parent[c:IconButton].Width, Converter={StaticResource mathSubtractConverter}, ConverterParameter=20}"
							Height="{Binding $parent[c:IconButton].Height, Converter={StaticResource mathSubtractConverter}, ConverterParameter=20}"
						/>
					</Button>
				</vm:IconButtonStyleSelector.Content>
			</vm:IconButtonStyleSelector>
		</ContentControl.DataTemplates>
	</ContentControl>
	
	
	
	
</UserControl>
